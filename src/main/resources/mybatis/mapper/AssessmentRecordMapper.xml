<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.AssessmentRecordMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.AssessmentRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="year" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="intellectual_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="intellectual_score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="maral_score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="overall_score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="overall_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="major_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="major_total" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sn" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, score, intellectual_rank, intellectual_score, maral_score, overall_score, 
    overall_rank, major_rank, major_total, sn
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.AssessmentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from assessment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from assessment_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from assessment_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.AssessmentRecordExample">
    delete from assessment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.AssessmentRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into assessment_record (year, score, intellectual_rank, 
      intellectual_score, maral_score, overall_score, 
      overall_rank, major_rank, major_total, 
      sn)
    values (#{year,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE}, #{intellectualRank,jdbcType=INTEGER}, 
      #{intellectualScore,jdbcType=DOUBLE}, #{maralScore,jdbcType=DOUBLE}, #{overallScore,jdbcType=DOUBLE}, 
      #{overallRank,jdbcType=INTEGER}, #{majorRank,jdbcType=INTEGER}, #{majorTotal,jdbcType=INTEGER}, 
      #{sn,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.AssessmentRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into assessment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="year != null">
        year,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="intellectualRank != null">
        intellectual_rank,
      </if>
      <if test="intellectualScore != null">
        intellectual_score,
      </if>
      <if test="maralScore != null">
        maral_score,
      </if>
      <if test="overallScore != null">
        overall_score,
      </if>
      <if test="overallRank != null">
        overall_rank,
      </if>
      <if test="majorRank != null">
        major_rank,
      </if>
      <if test="majorTotal != null">
        major_total,
      </if>
      <if test="sn != null">
        sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="intellectualRank != null">
        #{intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="intellectualScore != null">
        #{intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="maralScore != null">
        #{maralScore,jdbcType=DOUBLE},
      </if>
      <if test="overallScore != null">
        #{overallScore,jdbcType=DOUBLE},
      </if>
      <if test="overallRank != null">
        #{overallRank,jdbcType=INTEGER},
      </if>
      <if test="majorRank != null">
        #{majorRank,jdbcType=INTEGER},
      </if>
      <if test="majorTotal != null">
        #{majorTotal,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.AssessmentRecordExample" resultType="java.lang.Long">
    select count(*) from assessment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update assessment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.intellectualRank != null">
        intellectual_rank = #{record.intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="record.intellectualScore != null">
        intellectual_score = #{record.intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="record.maralScore != null">
        maral_score = #{record.maralScore,jdbcType=DOUBLE},
      </if>
      <if test="record.overallScore != null">
        overall_score = #{record.overallScore,jdbcType=DOUBLE},
      </if>
      <if test="record.overallRank != null">
        overall_rank = #{record.overallRank,jdbcType=INTEGER},
      </if>
      <if test="record.majorRank != null">
        major_rank = #{record.majorRank,jdbcType=INTEGER},
      </if>
      <if test="record.majorTotal != null">
        major_total = #{record.majorTotal,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update assessment_record
    set id = #{record.id,jdbcType=BIGINT},
      year = #{record.year,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DOUBLE},
      intellectual_rank = #{record.intellectualRank,jdbcType=INTEGER},
      intellectual_score = #{record.intellectualScore,jdbcType=DOUBLE},
      maral_score = #{record.maralScore,jdbcType=DOUBLE},
      overall_score = #{record.overallScore,jdbcType=DOUBLE},
      overall_rank = #{record.overallRank,jdbcType=INTEGER},
      major_rank = #{record.majorRank,jdbcType=INTEGER},
      major_total = #{record.majorTotal,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.AssessmentRecord">
    update assessment_record
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="intellectualRank != null">
        intellectual_rank = #{intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="intellectualScore != null">
        intellectual_score = #{intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="maralScore != null">
        maral_score = #{maralScore,jdbcType=DOUBLE},
      </if>
      <if test="overallScore != null">
        overall_score = #{overallScore,jdbcType=DOUBLE},
      </if>
      <if test="overallRank != null">
        overall_rank = #{overallRank,jdbcType=INTEGER},
      </if>
      <if test="majorRank != null">
        major_rank = #{majorRank,jdbcType=INTEGER},
      </if>
      <if test="majorTotal != null">
        major_total = #{majorTotal,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.AssessmentRecord">
    update assessment_record
    set year = #{year,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      intellectual_rank = #{intellectualRank,jdbcType=INTEGER},
      intellectual_score = #{intellectualScore,jdbcType=DOUBLE},
      maral_score = #{maralScore,jdbcType=DOUBLE},
      overall_score = #{overallScore,jdbcType=DOUBLE},
      overall_rank = #{overallRank,jdbcType=INTEGER},
      major_rank = #{majorRank,jdbcType=INTEGER},
      major_total = #{majorTotal,jdbcType=INTEGER},
      sn = #{sn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>