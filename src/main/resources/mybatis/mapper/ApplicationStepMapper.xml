<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.ApplicationStepMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.ApplicationStep">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="flow_template_step_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="application_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="operator_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="operation_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="primary_teaching_institution_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="grade_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="prize_id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, flow_template_step_id, application_id, operator_id, operation_date, status, primary_teaching_institution_id, 
    grade_id, prize_id
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.ApplicationStepExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from application_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from application_step
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from application_step
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.ApplicationStepExample">
    delete from application_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.ApplicationStep">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into application_step (flow_template_step_id, application_id, 
      operator_id, operation_date, status, 
      primary_teaching_institution_id, grade_id, prize_id
      )
    values (#{flowTemplateStepId,jdbcType=BIGINT}, #{applicationId,jdbcType=BIGINT}, 
      #{operatorId,jdbcType=BIGINT}, #{operationDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{primaryTeachingInstitutionId,jdbcType=BIGINT}, #{gradeId,jdbcType=BIGINT}, #{prizeId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.ApplicationStep">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into application_step
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowTemplateStepId != null">
        flow_template_step_id,
      </if>
      <if test="applicationId != null">
        application_id,
      </if>
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="operationDate != null">
        operation_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="primaryTeachingInstitutionId != null">
        primary_teaching_institution_id,
      </if>
      <if test="gradeId != null">
        grade_id,
      </if>
      <if test="prizeId != null">
        prize_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowTemplateStepId != null">
        #{flowTemplateStepId,jdbcType=BIGINT},
      </if>
      <if test="applicationId != null">
        #{applicationId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operationDate != null">
        #{operationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="primaryTeachingInstitutionId != null">
        #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="prizeId != null">
        #{prizeId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.ApplicationStepExample" resultType="java.lang.Long">
    select count(*) from application_step
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update application_step
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.flowTemplateStepId != null">
        flow_template_step_id = #{record.flowTemplateStepId,jdbcType=BIGINT},
      </if>
      <if test="record.applicationId != null">
        application_id = #{record.applicationId,jdbcType=BIGINT},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=BIGINT},
      </if>
      <if test="record.operationDate != null">
        operation_date = #{record.operationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.primaryTeachingInstitutionId != null">
        primary_teaching_institution_id = #{record.primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="record.gradeId != null">
        grade_id = #{record.gradeId,jdbcType=BIGINT},
      </if>
      <if test="record.prizeId != null">
        prize_id = #{record.prizeId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update application_step
    set id = #{record.id,jdbcType=BIGINT},
      flow_template_step_id = #{record.flowTemplateStepId,jdbcType=BIGINT},
      application_id = #{record.applicationId,jdbcType=BIGINT},
      operator_id = #{record.operatorId,jdbcType=BIGINT},
      operation_date = #{record.operationDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      primary_teaching_institution_id = #{record.primaryTeachingInstitutionId,jdbcType=BIGINT},
      grade_id = #{record.gradeId,jdbcType=BIGINT},
      prize_id = #{record.prizeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.ApplicationStep">
    update application_step
    <set>
      <if test="flowTemplateStepId != null">
        flow_template_step_id = #{flowTemplateStepId,jdbcType=BIGINT},
      </if>
      <if test="applicationId != null">
        application_id = #{applicationId,jdbcType=BIGINT},
      </if>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=BIGINT},
      </if>
      <if test="operationDate != null">
        operation_date = #{operationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="primaryTeachingInstitutionId != null">
        primary_teaching_institution_id = #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="gradeId != null">
        grade_id = #{gradeId,jdbcType=BIGINT},
      </if>
      <if test="prizeId != null">
        prize_id = #{prizeId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.ApplicationStep">
    update application_step
    set flow_template_step_id = #{flowTemplateStepId,jdbcType=BIGINT},
      application_id = #{applicationId,jdbcType=BIGINT},
      operator_id = #{operatorId,jdbcType=BIGINT},
      operation_date = #{operationDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      primary_teaching_institution_id = #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      grade_id = #{gradeId,jdbcType=BIGINT},
      prize_id = #{prizeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>