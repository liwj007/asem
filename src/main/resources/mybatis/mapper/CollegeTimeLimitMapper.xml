<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.CollegeTimeLimitMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.CollegeTimeLimit">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="scholarship_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="primary_teaching_institution_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="student_end_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="grade_end_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="prize_id" javaType="java.lang.Long" jdbcType="BIGINT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, scholarship_id, primary_teaching_institution_id, student_end_date, grade_end_date, 
    prize_id
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.CollegeTimeLimitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from college_time_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from college_time_limit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from college_time_limit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.CollegeTimeLimitExample">
    delete from college_time_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.CollegeTimeLimit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into college_time_limit (scholarship_id, primary_teaching_institution_id, 
      student_end_date, grade_end_date, prize_id
      )
    values (#{scholarshipId,jdbcType=BIGINT}, #{primaryTeachingInstitutionId,jdbcType=BIGINT}, 
      #{studentEndDate,jdbcType=TIMESTAMP}, #{gradeEndDate,jdbcType=TIMESTAMP}, #{prizeId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.CollegeTimeLimit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into college_time_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scholarshipId != null">
        scholarship_id,
      </if>
      <if test="primaryTeachingInstitutionId != null">
        primary_teaching_institution_id,
      </if>
      <if test="studentEndDate != null">
        student_end_date,
      </if>
      <if test="gradeEndDate != null">
        grade_end_date,
      </if>
      <if test="prizeId != null">
        prize_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scholarshipId != null">
        #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="primaryTeachingInstitutionId != null">
        #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="studentEndDate != null">
        #{studentEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gradeEndDate != null">
        #{gradeEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="prizeId != null">
        #{prizeId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.CollegeTimeLimitExample" resultType="java.lang.Long">
    select count(*) from college_time_limit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update college_time_limit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.scholarshipId != null">
        scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="record.primaryTeachingInstitutionId != null">
        primary_teaching_institution_id = #{record.primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="record.studentEndDate != null">
        student_end_date = #{record.studentEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gradeEndDate != null">
        grade_end_date = #{record.gradeEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prizeId != null">
        prize_id = #{record.prizeId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update college_time_limit
    set id = #{record.id,jdbcType=BIGINT},
      scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      primary_teaching_institution_id = #{record.primaryTeachingInstitutionId,jdbcType=BIGINT},
      student_end_date = #{record.studentEndDate,jdbcType=TIMESTAMP},
      grade_end_date = #{record.gradeEndDate,jdbcType=TIMESTAMP},
      prize_id = #{record.prizeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.CollegeTimeLimit">
    update college_time_limit
    <set>
      <if test="scholarshipId != null">
        scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="primaryTeachingInstitutionId != null">
        primary_teaching_institution_id = #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      </if>
      <if test="studentEndDate != null">
        student_end_date = #{studentEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="gradeEndDate != null">
        grade_end_date = #{gradeEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="prizeId != null">
        prize_id = #{prizeId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.CollegeTimeLimit">
    update college_time_limit
    set scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      primary_teaching_institution_id = #{primaryTeachingInstitutionId,jdbcType=BIGINT},
      student_end_date = #{studentEndDate,jdbcType=TIMESTAMP},
      grade_end_date = #{gradeEndDate,jdbcType=TIMESTAMP},
      prize_id = #{prizeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>