<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.ComprehensiveEvaluationMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.ComprehensiveEvaluation">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="major_number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="composite_score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="composite_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="intellectual_score" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="intellectual_rank" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="academic_year" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="college_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="major_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="grade_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, no, major_number, composite_score, composite_rank, intellectual_score, 
    intellectual_rank, academic_year, college_name, major_name, grade_name
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.ComprehensiveEvaluationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comprehensive_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comprehensive_evaluation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comprehensive_evaluation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.ComprehensiveEvaluationExample">
    delete from comprehensive_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.ComprehensiveEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comprehensive_evaluation (name, no, major_number, 
      composite_score, composite_rank, intellectual_score, 
      intellectual_rank, academic_year, college_name, 
      major_name, grade_name)
    values (#{name,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, #{majorNumber,jdbcType=INTEGER}, 
      #{compositeScore,jdbcType=DOUBLE}, #{compositeRank,jdbcType=INTEGER}, #{intellectualScore,jdbcType=DOUBLE}, 
      #{intellectualRank,jdbcType=INTEGER}, #{academicYear,jdbcType=VARCHAR}, #{collegeName,jdbcType=VARCHAR}, 
      #{majorName,jdbcType=VARCHAR}, #{gradeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.ComprehensiveEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comprehensive_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="majorNumber != null">
        major_number,
      </if>
      <if test="compositeScore != null">
        composite_score,
      </if>
      <if test="compositeRank != null">
        composite_rank,
      </if>
      <if test="intellectualScore != null">
        intellectual_score,
      </if>
      <if test="intellectualRank != null">
        intellectual_rank,
      </if>
      <if test="academicYear != null">
        academic_year,
      </if>
      <if test="collegeName != null">
        college_name,
      </if>
      <if test="majorName != null">
        major_name,
      </if>
      <if test="gradeName != null">
        grade_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="majorNumber != null">
        #{majorNumber,jdbcType=INTEGER},
      </if>
      <if test="compositeScore != null">
        #{compositeScore,jdbcType=DOUBLE},
      </if>
      <if test="compositeRank != null">
        #{compositeRank,jdbcType=INTEGER},
      </if>
      <if test="intellectualScore != null">
        #{intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="intellectualRank != null">
        #{intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="academicYear != null">
        #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="collegeName != null">
        #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null">
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null">
        #{gradeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.ComprehensiveEvaluationExample" resultType="java.lang.Long">
    select count(*) from comprehensive_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comprehensive_evaluation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.majorNumber != null">
        major_number = #{record.majorNumber,jdbcType=INTEGER},
      </if>
      <if test="record.compositeScore != null">
        composite_score = #{record.compositeScore,jdbcType=DOUBLE},
      </if>
      <if test="record.compositeRank != null">
        composite_rank = #{record.compositeRank,jdbcType=INTEGER},
      </if>
      <if test="record.intellectualScore != null">
        intellectual_score = #{record.intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="record.intellectualRank != null">
        intellectual_rank = #{record.intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="record.academicYear != null">
        academic_year = #{record.academicYear,jdbcType=VARCHAR},
      </if>
      <if test="record.collegeName != null">
        college_name = #{record.collegeName,jdbcType=VARCHAR},
      </if>
      <if test="record.majorName != null">
        major_name = #{record.majorName,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeName != null">
        grade_name = #{record.gradeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comprehensive_evaluation
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=VARCHAR},
      major_number = #{record.majorNumber,jdbcType=INTEGER},
      composite_score = #{record.compositeScore,jdbcType=DOUBLE},
      composite_rank = #{record.compositeRank,jdbcType=INTEGER},
      intellectual_score = #{record.intellectualScore,jdbcType=DOUBLE},
      intellectual_rank = #{record.intellectualRank,jdbcType=INTEGER},
      academic_year = #{record.academicYear,jdbcType=VARCHAR},
      college_name = #{record.collegeName,jdbcType=VARCHAR},
      major_name = #{record.majorName,jdbcType=VARCHAR},
      grade_name = #{record.gradeName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.ComprehensiveEvaluation">
    update comprehensive_evaluation
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="majorNumber != null">
        major_number = #{majorNumber,jdbcType=INTEGER},
      </if>
      <if test="compositeScore != null">
        composite_score = #{compositeScore,jdbcType=DOUBLE},
      </if>
      <if test="compositeRank != null">
        composite_rank = #{compositeRank,jdbcType=INTEGER},
      </if>
      <if test="intellectualScore != null">
        intellectual_score = #{intellectualScore,jdbcType=DOUBLE},
      </if>
      <if test="intellectualRank != null">
        intellectual_rank = #{intellectualRank,jdbcType=INTEGER},
      </if>
      <if test="academicYear != null">
        academic_year = #{academicYear,jdbcType=VARCHAR},
      </if>
      <if test="collegeName != null">
        college_name = #{collegeName,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null">
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null">
        grade_name = #{gradeName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.ComprehensiveEvaluation">
    update comprehensive_evaluation
    set name = #{name,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      major_number = #{majorNumber,jdbcType=INTEGER},
      composite_score = #{compositeScore,jdbcType=DOUBLE},
      composite_rank = #{compositeRank,jdbcType=INTEGER},
      intellectual_score = #{intellectualScore,jdbcType=DOUBLE},
      intellectual_rank = #{intellectualRank,jdbcType=INTEGER},
      academic_year = #{academicYear,jdbcType=VARCHAR},
      college_name = #{collegeName,jdbcType=VARCHAR},
      major_name = #{majorName,jdbcType=VARCHAR},
      grade_name = #{gradeName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>