<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.ScholarshipMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.Scholarship">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="flow_template_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="requirement" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="level_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="unit_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="scholarship_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, flow_template_id, requirement, level_type, status, create_date, unit_id, name, 
    scholarship_type
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.ScholarshipExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from scholarship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scholarship
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from scholarship
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.ScholarshipExample">
    delete from scholarship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.Scholarship">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scholarship (flow_template_id, requirement, level_type, 
      status, create_date, unit_id, 
      name, scholarship_type)
    values (#{flowTemplateId,jdbcType=BIGINT}, #{requirement,jdbcType=VARCHAR}, #{levelType,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{unitId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{scholarshipType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.Scholarship">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scholarship
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="flowTemplateId != null">
        flow_template_id,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="levelType != null">
        level_type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="scholarshipType != null">
        scholarship_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="flowTemplateId != null">
        #{flowTemplateId,jdbcType=BIGINT},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null">
        #{levelType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="scholarshipType != null">
        #{scholarshipType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.ScholarshipExample" resultType="java.lang.Long">
    select count(*) from scholarship
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scholarship
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.flowTemplateId != null">
        flow_template_id = #{record.flowTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.levelType != null">
        level_type = #{record.levelType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.scholarshipType != null">
        scholarship_type = #{record.scholarshipType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scholarship
    set id = #{record.id,jdbcType=BIGINT},
      flow_template_id = #{record.flowTemplateId,jdbcType=BIGINT},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      level_type = #{record.levelType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      unit_id = #{record.unitId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      scholarship_type = #{record.scholarshipType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.Scholarship">
    update scholarship
    <set>
      <if test="flowTemplateId != null">
        flow_template_id = #{flowTemplateId,jdbcType=BIGINT},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="levelType != null">
        level_type = #{levelType,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="scholarshipType != null">
        scholarship_type = #{scholarshipType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.Scholarship">
    update scholarship
    set flow_template_id = #{flowTemplateId,jdbcType=BIGINT},
      requirement = #{requirement,jdbcType=VARCHAR},
      level_type = #{levelType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      unit_id = #{unitId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      scholarship_type = #{scholarshipType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>