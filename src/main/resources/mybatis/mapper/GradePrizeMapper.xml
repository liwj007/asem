<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liwj.asem.dao.GradePrizeMapper">
  <resultMap id="BaseResultMap" type="com.liwj.asem.model.GradePrize">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="college_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="number" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="prize_info_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="scholarship_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="scholarship_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="grade" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="college_prize_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_date" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, college_id, number, prize_info_id, scholarship_id, scholarship_type, grade, status, 
    college_prize_id, create_date
  </sql>
  <select id="selectByExample" parameterType="com.liwj.asem.model.GradePrizeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from grade_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from grade_prize
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from grade_prize
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwj.asem.model.GradePrizeExample">
    delete from grade_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwj.asem.model.GradePrize">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into grade_prize (college_id, number, prize_info_id, 
      scholarship_id, scholarship_type, grade, 
      status, college_prize_id, create_date
      )
    values (#{collegeId,jdbcType=BIGINT}, #{number,jdbcType=INTEGER}, #{prizeInfoId,jdbcType=BIGINT}, 
      #{scholarshipId,jdbcType=BIGINT}, #{scholarshipType,jdbcType=INTEGER}, #{grade,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{collegePrizeId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liwj.asem.model.GradePrize">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into grade_prize
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="prizeInfoId != null">
        prize_info_id,
      </if>
      <if test="scholarshipId != null">
        scholarship_id,
      </if>
      <if test="scholarshipType != null">
        scholarship_type,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="collegePrizeId != null">
        college_prize_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collegeId != null">
        #{collegeId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="prizeInfoId != null">
        #{prizeInfoId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipId != null">
        #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipType != null">
        #{scholarshipType,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="collegePrizeId != null">
        #{collegePrizeId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwj.asem.model.GradePrizeExample" resultType="java.lang.Long">
    select count(*) from grade_prize
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update grade_prize
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.collegeId != null">
        college_id = #{record.collegeId,jdbcType=BIGINT},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.prizeInfoId != null">
        prize_info_id = #{record.prizeInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.scholarshipId != null">
        scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="record.scholarshipType != null">
        scholarship_type = #{record.scholarshipType,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.collegePrizeId != null">
        college_prize_id = #{record.collegePrizeId,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update grade_prize
    set id = #{record.id,jdbcType=BIGINT},
      college_id = #{record.collegeId,jdbcType=BIGINT},
      number = #{record.number,jdbcType=INTEGER},
      prize_info_id = #{record.prizeInfoId,jdbcType=BIGINT},
      scholarship_id = #{record.scholarshipId,jdbcType=BIGINT},
      scholarship_type = #{record.scholarshipType,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      college_prize_id = #{record.collegePrizeId,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwj.asem.model.GradePrize">
    update grade_prize
    <set>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=BIGINT},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="prizeInfoId != null">
        prize_info_id = #{prizeInfoId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipId != null">
        scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      </if>
      <if test="scholarshipType != null">
        scholarship_type = #{scholarshipType,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="collegePrizeId != null">
        college_prize_id = #{collegePrizeId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwj.asem.model.GradePrize">
    update grade_prize
    set college_id = #{collegeId,jdbcType=BIGINT},
      number = #{number,jdbcType=INTEGER},
      prize_info_id = #{prizeInfoId,jdbcType=BIGINT},
      scholarship_id = #{scholarshipId,jdbcType=BIGINT},
      scholarship_type = #{scholarshipType,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      college_prize_id = #{collegePrizeId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>